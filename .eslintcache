[{"C:\\react uygulamaları\\todo\\src\\index.js":"1","C:\\react uygulamaları\\todo\\src\\reportWebVitals.js":"2","C:\\react uygulamaları\\todo\\src\\App.js":"3","C:\\react uygulamaları\\todo\\src\\components\\ToDoLi.js":"4","C:\\react uygulamaları\\todo\\src\\reducers\\index.js":"5","C:\\react uygulamaları\\todo\\src\\actions\\index.js":"6"},{"size":1011,"mtime":1609779860316,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609340186352,"results":"9","hashOfConfig":"8"},{"size":2097,"mtime":1609865538447,"results":"10","hashOfConfig":"8"},{"size":181,"mtime":1609860824933,"results":"11","hashOfConfig":"8"},{"size":533,"mtime":1609791750609,"results":"12","hashOfConfig":"8"},{"size":2768,"mtime":1609862019093,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"b6ispb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react uygulamaları\\todo\\src\\index.js",[],["28","29"],"C:\\react uygulamaları\\todo\\src\\reportWebVitals.js",[],"C:\\react uygulamaları\\todo\\src\\App.js",["30"],"import React,{useState,useEffect} from \"react\"\nimport \"./App.css\"\nimport ToDoLi from \"./components/ToDoLi.js\"\nimport {connect} from \"react-redux\"\nimport {addTodo, toggle, clearIsDone, loadTodos} from \"./actions\"\nimport firebase from \"firebase/app\"\nimport \"firebase/database\"\n\nconst App = (props) => {\n\n\tconst [description, setDescription] = useState(\"\")\n\n\tuseEffect(()=>{\n\t\tprops.loadTodos()\n\t},[])\n\n\tconsole.log(\"props: \", props)\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row mt-2\">\n\t\t\t\t<div className=\"col-lg-4 m-auto\">\n\t\t\t\t\t<h4 className=\"text-center\">YAPILACAKLAR</h4>\n\t\t\t\t\t<div className=\"input-group mb-3\">\n\t\t\t\t\t\t<input type=\"text\" onChange={e=>setDescription(e.target.value)} onKeyUp={(e)=>{\n\t\t\t\t\t\t\t\tconsole.log(\"e:\",e)\n\t\t\t\t\t\t\t\tif (e.key===\"Enter\") {\n\t\t\t\t\t\t\t\t\tsetDescription(\"\")\n\t\t\t\t\t\t\t\t\tprops.addTodo(description)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} value={description} className=\"form-control\" placeholder=\"Yapılacak işini yaz\"/>\n\t\t\t\t\t\t<div className=\"input-group-append\">\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-primary\" type=\"button\" onClick={()=>{setDescription(\"\"); props.addTodo(description)}}>EKLE</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.todos.map(listItem => (\n\t\t\t\t\t\t\t\t<ToDoLi key={listItem.id} id={listItem.id} toggle={()=>props.toggle(listItem.id)} description = {listItem.description} isDone = {listItem.isDone} />\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<button className=\"btn btn-outline-success btn-block\" onClick={()=>props.clearIsDone()}>Yapılmışları Temizle</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n\tapiKey: \"AIzaSyBUX_HzUZysC9iZ0-BvKcCUD8pPAAnpvxY\",\n\tauthDomain: \"davetlimiz.firebaseapp.com\",\n\tprojectId: \"davetlimiz\",\n\tstorageBucket: \"davetlimiz.appspot.com\",\n\tmessagingSenderId: \"858977878125\",\n\tappId: \"1:858977878125:web:f3bc8bc40bb3e30ec33f64\"\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nconst mapStateToProps = state =>{\n\treturn { todos: state }\n}\n\nexport default connect(mapStateToProps, {addTodo, toggle, clearIsDone, loadTodos})(App);\n","C:\\react uygulamaları\\todo\\src\\components\\ToDoLi.js",[],"C:\\react uygulamaları\\todo\\src\\reducers\\index.js",[],"C:\\react uygulamaları\\todo\\src\\actions\\index.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":15,"column":4,"nodeType":"37","endLine":15,"endColumn":6,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [props]",{"range":"44","text":"45"},[395,397],"[props]"]